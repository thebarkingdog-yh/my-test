name: Run Python Linting

on: [push, pull_request]

jobs:
  isort:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: isort/isort-action@v1
        with:
          configuration: --check-only --diff --profile black

  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run black check
        uses: jpetrucciani/black-check@master

  ruff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run ruff check
        uses: jpetrucciani/ruff-check@main

  test:
    needs: [isort, black, ruff]
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/sub'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Dependencies and Run Tests
        run: |
          pip install pytest pytest-cov requests
          pytest tests/ --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov | tee pytest-coverage.txt

      - name: Pytest coverage comment
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml

      - name: Check the output coverage
        run: |
          echo "Coverage Percantage - ${{ steps.coverageComment.outputs.coverage }}"
          echo "Coverage Color - ${{ steps.coverageComment.outputs.color }}"
          echo "Coverage Html - ${{ steps.coverageComment.outputs.coverageHtml }}"
          echo "Summary Report - ${{ steps.coverageComment.outputs.summaryReport }}"

          echo "Coverage Warnings - ${{ steps.coverageComment.outputs.warnings }}"

          echo "Coverage Errors - ${{ steps.coverageComment.outputs.errors }}"
          echo "Coverage Failures - ${{ steps.coverageComment.outputs.failures }}"
          echo "Coverage Skipped - ${{ steps.coverageComment.outputs.skipped }}"
          echo "Coverage Tests - ${{ steps.coverageComment.outputs.tests }}"
          echo "Coverage Time - ${{ steps.coverageComment.outputs.time }}"
          echo "Not Success Test Info - ${{ steps.coverageComment.outputs.notSuccessTestInfo }}"
